/**
 * KYC Configuration Constants
 * Centralized configuration for KYC verification settings
 */

export const KYC_CONFIG = {
  // Demo/Sandbox Configuration
  DEMO_MODE: {
    ENABLED: false, // Set to true to use Sumsub sandbox environment
    ACCESS_TOKEN: 'sbx:jlybqtU3YXpUENTLnahyugay.dqtaLkxlwcPXXNhRmOCp86H9q0yvlu2o', // Your Sumsub App Token
    SECRET_KEY: 'vIYavzZHN6xsWB7l9alTOLqDIzH14yUA', // Your Sumsub Secret Key
    ENVIRONMENT: 'sandbox' as const,
  },

  // Default SDK Settings
  DEFAULT_SETTINGS: {
    FLOW_NAME: 'basic-kyc',
    LOCALE: 'en',
    THEME: 'system' as const,
    TTL_SECONDS: 3600, // 1 hour
    LEVEL_NAME: 'basic-kyc-level',
  },

  // Environment Detection
  IS_DEVELOPMENT: __DEV__,
  IS_PRODUCTION: !__DEV__,

  // Feature Flags
  FEATURES: {
    ENABLE_SDK: true,
    ENABLE_WEB_FALLBACK: true,
    ENABLE_MOCK_TOKENS: __DEV__,
    ENABLE_DEBUG_LOGGING: __DEV__,
  },
} as const;

export const KYC_FLOWS = {
  BASIC: 'basic-kyc',
  ENHANCED: 'enhanced-kyc',
  BUSINESS: 'business-kyc',
  INVESTOR: 'investor-kyc',
} as const;

export const KYC_LEVELS = {
  BASIC: 'basic-kyc-level',
  ENHANCED: 'enhanced-kyc-level',
  BUSINESS: 'business-kyc-level',
  INVESTOR: 'investor-kyc-level',
} as const;

export const KYC_THEMES = {
  LIGHT: 'light',
  DARK: 'dark',
  SYSTEM: 'system',
} as const;

/**
 * Get the appropriate access token based on environment
 */
export const getAccessToken = (): string => {
  if (KYC_CONFIG.DEMO_MODE.ENABLED) {
    return KYC_CONFIG.DEMO_MODE.ACCESS_TOKEN;
  }
  
  // In production, this would come from your backend
  throw new Error('Production access token should be generated by backend');
};

/**
 * Check if demo mode is enabled
 */
export const isDemoMode = (): boolean => {
  return KYC_CONFIG.DEMO_MODE.ENABLED && KYC_CONFIG.IS_DEVELOPMENT;
};

/**
 * Get KYC configuration for specific user type
 */
export const getKYCConfigForUserType = (userType: 'investor' | 'homeowner' | 'renter') => {
  const baseConfig = {
    locale: KYC_CONFIG.DEFAULT_SETTINGS.LOCALE,
    theme: KYC_CONFIG.DEFAULT_SETTINGS.THEME,
    ttlInSecs: KYC_CONFIG.DEFAULT_SETTINGS.TTL_SECONDS,
  };

  switch (userType) {
    case 'investor':
      return {
        ...baseConfig,
        flowName: KYC_FLOWS.INVESTOR,
        levelName: KYC_LEVELS.INVESTOR,
      };
    case 'homeowner':
      return {
        ...baseConfig,
        flowName: KYC_FLOWS.ENHANCED,
        levelName: KYC_LEVELS.ENHANCED,
      };
    case 'renter':
    default:
      return {
        ...baseConfig,
        flowName: KYC_FLOWS.BASIC,
        levelName: KYC_LEVELS.BASIC,
      };
  }
};

export default KYC_CONFIG;